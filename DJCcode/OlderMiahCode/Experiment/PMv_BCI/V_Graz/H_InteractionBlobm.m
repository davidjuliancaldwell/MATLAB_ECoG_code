%%
Z_Constants;
addpath ./scripts;

%% perform analyses
load(fullfile(META_DIR, 'areas.mat'));

%% lets build a table of electrode information
trodes = [];
etrodes = [];
ltrodes = [];

SHOW_INT_PLOTS = false;

ctr = 0;
for zid = SIDS
    sid = zid{:};
    ctr = ctr + 1;
    
    fprintf('working on subject %s\n', sid);
    
    %% set up to work on this subject
    fprintf(' loading data: ');    
    tic;
    load(fullfile(META_DIR, [sid '_interactions']));
    load(fullfile(META_DIR, [sid '_epochs']),'montage', 'tgts', 'ress');
    load(fullfile(META_DIR, [sid '_results']), 'class', 'cchan');
    
    trs = trodesOfInterest{ctr};
    trs = trs(trs~=cchan);
    
    for chan = 1:size(alignedAverages, 1)
        earlyInteraction = squeeze(alignedEarly(chan,:,:));
        earlyInteraction = repairSTWCPlot(earlyInteraction);
        
        lateInteraction = squeeze(alignedLate(chan,:,:));
        lateInteraction = repairSTWCPlot(lateInteraction);
        
        interaction = squeeze(alignedAverages(chan,:,:));        
        interaction = repairSTWCPlot(interaction);
        
        lags = allLags(chan, :);
        t = allTs(chan, :);
                        
        
        [weight, tcenter, lcenter] = findBestLag(interaction, t, lags, SHOW_INT_PLOTS);
        [eweight, etcenter, elcenter] = findBestLag(earlyInteraction, t, lags, false);
        [lweight, ltcenter, llcenter] = findBestLag(lateInteraction, t, lags, false);        

        locs = trodeLocsFromMontage(sid, montage, true);
        
        % update electrode info
        % row 1 is sid
        % row 2 is channel number
        % row 3-5 are tal coords
        % row 6 is class (-1,0,1,2)
        % row 7 is interaction coeff
        % row 8 is interaction time
        % row 9 is interaction lag
        % row 10 is subject accuracy
        
        trodes(end+1, :) = [...
            ctr ...
            trs(chan) ...
            locs(trs(chan),1) ...
            locs(trs(chan),2) ...
            locs(trs(chan),3) ...
            class(trs(chan)) ...
            weight ...
            tcenter ...
            lcenter ...
            mean(tgts==ress) ...
            ];
        
        etrodes(end+1, :) = [...
            ctr ...
            trs(chan) ...
            locs(trs(chan),1) ...
            locs(trs(chan),2) ...
            locs(trs(chan),3) ...
            class(trs(chan)) ...
            eweight ...
            etcenter ...
            elcenter ...
            mean(tgts==ress) ...
            ];

        ltrodes(end+1, :) = [...
            ctr ...
            trs(chan) ...
            locs(trs(chan),1) ...
            locs(trs(chan),2) ...
            locs(trs(chan),3) ...
            class(trs(chan)) ...
            lweight ...
            ltcenter ...
            llcenter ...
            mean(tgts==ress) ...
            ];        
    end
    
    toc;
end

save('temp.mat', 'trodes', 'etrodes', 'ltrodes');

