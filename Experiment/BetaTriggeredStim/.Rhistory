setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
data <- subset(data, magnitude<1000)
data <- subset(data,!is.nan(data$magnitude))
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
dataNoBaseline = data[data$numStims != "Base",]
#data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable.csv"),header=TRUE,sep = ",",stringsAsFactors=F)
ggplot(data, aes(x=magnitude)) +
geom_histogram(binwidth=100)
# # Change box plot colors by groups
# ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
#   geom_boxplot()
# Change the position
p<-ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
geom_boxplot(position=position_dodge(1))
p
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), summarize, percentDiff = mean(percentDiff))
# Change box plot colors by groups
# ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
#   geom_boxplot(notch=TRUE)
# Change the position
p<-ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(notch=TRUE,position=position_dodge(1)) +
geom_hline(yintercept=0)
p
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) + theme_classic(base_size = 18) +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8)) +
geom_pointrange(mapping = aes(x = numStims, y = percentDiff,color=phaseClass),
stat = "summary",
fun.ymin = function(z) {quantile(z,0.25)},
fun.ymax = function(z) {quantile(z,0.75)},
fun.y = median,
position=position_dodge(0.8),size=1.2,color="black",show.legend = FALSE) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(mapping = aes(x = numStims, y = percentDiff,fill=phaseClass),
position=position_dodge(0.8),notch=TRUE)  +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8))+
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')
p2
p2 + geom_hline(yintercept=0) + theme_classic()
#fit.glm    = glm(magnitude ~ stimLevel + numStims + subjectNum + channel + phaseClass,data=data)
#fit.glm    = glm(magnitude ~ numStims + channel + phaseClass,data=data)
fit.glm    = glm(percentDiff ~ numStims+phaseClass+betaLabels+channel,data=dataNoBaseline)
summary(fit.glm)
plot(fit.glm)
#fit.lmm = lmer(magnitude ~ stimLevel + numStims + subjectNum + channel + phaseClass + (1|subjectNum) + (1|numStims) + (1|channel)+(1|stimLevel),data=data)
fit.lmm = lmer(percentDiff~numStims+phaseClass+betaLabels+channel+ (1| sid) ,data=dataNoBaseline)
summary(fit.lmm)
plot(fit.lmm)
confint(fit.lmm,method="boot")
summary(fit.glm)
summary(glht(fit.glm,linfct=mcp(phaseClass="Tukey")))
summary(glht(fit.glm,linfct=mcp(numStims="Tukey")))
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_100.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
data <- subset(data, magnitude<1000)
data <- subset(data,!is.nan(data$magnitude))
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
dataNoBaseline = data[data$numStims != "Base",]
#data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable.csv"),header=TRUE,sep = ",",stringsAsFactors=F)
ggplot(data, aes(x=magnitude)) +
geom_histogram(binwidth=100)
# # Change box plot colors by groups
# ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
#   geom_boxplot()
# Change the position
p<-ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
geom_boxplot(position=position_dodge(1))
p
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), summarize, percentDiff = mean(percentDiff))
# Change box plot colors by groups
# ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
#   geom_boxplot(notch=TRUE)
# Change the position
p<-ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(notch=TRUE,position=position_dodge(1)) +
geom_hline(yintercept=0)
p
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) + theme_classic(base_size = 18) +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8)) +
geom_pointrange(mapping = aes(x = numStims, y = percentDiff,color=phaseClass),
stat = "summary",
fun.ymin = function(z) {quantile(z,0.25)},
fun.ymax = function(z) {quantile(z,0.75)},
fun.y = median,
position=position_dodge(0.8),size=1.2,color="black",show.legend = FALSE) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(mapping = aes(x = numStims, y = percentDiff,fill=phaseClass),
position=position_dodge(0.8),notch=TRUE)  +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8))+
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')
p2
p2 + geom_hline(yintercept=0) + theme_classic()
fit.glm    = glm(percentDiff ~ numStims+phaseClass+betaLabels,data=dataNoBaseline)
summary(fit.glm)
plot(fit.glm)
summary(glht(fit.glm,linfct=mcp(phaseClass="Tukey")))
summary(glht(fit.glm,linfct=mcp(numStims="Tukey")))
#fit.glm    = glm(magnitude ~ stimLevel + numStims + subjectNum + channel + phaseClass,data=data)
#fit.glm    = glm(magnitude ~ numStims + channel + phaseClass,data=data)
fit.glm2    = glm(magnitude ~ numStims,data=data)
summary(fit.glm2)
plot(fit.glm2)
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_50.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
data <- subset(data, magnitude<1000)
data <- subset(data,!is.nan(data$magnitude))
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
dataNoBaseline = data[data$numStims != "Base",]
#data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable.csv"),header=TRUE,sep = ",",stringsAsFactors=F)
ggplot(data, aes(x=magnitude)) +
geom_histogram(binwidth=100)
# # Change box plot colors by groups
# ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
#   geom_boxplot()
# Change the position
p<-ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
geom_boxplot(position=position_dodge(1))
p
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), summarize, percentDiff = mean(percentDiff))
# Change box plot colors by groups
# ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
#   geom_boxplot(notch=TRUE)
# Change the position
p<-ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(notch=TRUE,position=position_dodge(1)) +
geom_hline(yintercept=0)
p
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) + theme_classic(base_size = 18) +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8)) +
geom_pointrange(mapping = aes(x = numStims, y = percentDiff,color=phaseClass),
stat = "summary",
fun.ymin = function(z) {quantile(z,0.25)},
fun.ymax = function(z) {quantile(z,0.75)},
fun.y = median,
position=position_dodge(0.8),size=1.2,color="black",show.legend = FALSE) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
fit.glm2    = glm(magnitude ~ numStims+phaseClass+betaLabels+channel,data=data)
summary(fit.glm2)
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_30.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
data <- subset(data, magnitude<1000)
data <- subset(data,!is.nan(data$magnitude))
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
dataNoBaseline = data[data$numStims != "Base",]
#data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable.csv"),header=TRUE,sep = ",",stringsAsFactors=F)
ggplot(data, aes(x=magnitude)) +
geom_histogram(binwidth=100)
# # Change box plot colors by groups
# ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
#   geom_boxplot()
# Change the position
p<-ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
geom_boxplot(position=position_dodge(1))
p
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), summarize, percentDiff = mean(percentDiff))
# Change box plot colors by groups
# ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
#   geom_boxplot(notch=TRUE)
# Change the position
p<-ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(notch=TRUE,position=position_dodge(1)) +
geom_hline(yintercept=0)
p
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) + theme_classic(base_size = 18) +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8)) +
geom_pointrange(mapping = aes(x = numStims, y = percentDiff,color=phaseClass),
stat = "summary",
fun.ymin = function(z) {quantile(z,0.25)},
fun.ymax = function(z) {quantile(z,0.75)},
fun.y = median,
position=position_dodge(0.8),size=1.2,color="black",show.legend = FALSE) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(mapping = aes(x = numStims, y = percentDiff,fill=phaseClass),
position=position_dodge(0.8),notch=TRUE)  +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8))+
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')
p2
p2 + geom_hline(yintercept=0) + theme_classic()
#fit.glm    = glm(magnitude ~ stimLevel + numStims + subjectNum + channel + phaseClass,data=data)
#fit.glm    = glm(magnitude ~ numStims + channel + phaseClass,data=data)
fit.glm    = glm(percentDiff ~ numStims+phaseClass+betaLabels,data=dataNoBaseline)
summary(fit.glm)
plot(fit.glm)
#fit.glm    = glm(magnitude ~ numStims + channel + phaseClass,data=data)
fit.glm2    = glm(magnitude ~ numStims+phaseClass+betaLabels+channel,data=data)
summary(fit.glm2)
plot(fit.glm2)
#fit.lmm = lmer(magnitude ~ stimLevel + numStims + subjectNum + channel + phaseClass + (1|subjectNum) + (1|numStims) + (1|channel)+(1|stimLevel),data=data)
fit.lmm = lmer(percentDiff~numStims+phaseClass+betaLabels+channel+ (1| sid) ,data=dataNoBaseline)
summary(fit.lmm)
plot(fit.lmm)
summary(glht(fit.glm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.glm2,linfct=mcp(phaseClass="Tukey")))
summary(fit.glm)
summary(glht(fit.glm,linfct=mcp(phaseClass="Tukey")))
summary(glht(fit.glm,linfct=mcp(numStims="Tukey")))
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels+channel + (1|sid) + (1|channel)  ,data=dataNoBaseline)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (1|sid) + (1|channel)  ,data=dataNoBaseline)
plot(fit.lmm2)
summary(fit.lmm2)
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (1|channel)  ,data=dataNoBaseline)
summary(fit.lmm2)
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (numStims|channel) + (phaseClass|channel) ,data=dataNoBaseline)
plot(fit.lmm2)
summary(fit.lmm2)
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
summary(glht(fit.lmm,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm,linfct=mcp(phaseClass="Tukey")))
ggplot(data, aes(x=magnitude)) +
geom_histogram(binwidth=100)
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_50.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
data <- subset(data, magnitude<1000)
data <- subset(data,!is.nan(data$magnitude))
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
dataNoBaseline = data[data$numStims != "Base",]
#data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable.csv"),header=TRUE,sep = ",",stringsAsFactors=F)
ggplot(data, aes(x=magnitude)) +
geom_histogram(binwidth=100)
# # Change box plot colors by groups
# ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
#   geom_boxplot()
# Change the position
p<-ggplot(data, aes(x=numStims, y=magnitude, fill=phaseClass)) +
geom_boxplot(position=position_dodge(1))
p
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), summarize, percentDiff = mean(percentDiff))
# Change box plot colors by groups
# ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
#   geom_boxplot(notch=TRUE)
# Change the position
p<-ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(notch=TRUE,position=position_dodge(1)) +
geom_hline(yintercept=0)
p
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) + theme_classic(base_size = 18) +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8)) +
geom_pointrange(mapping = aes(x = numStims, y = percentDiff,color=phaseClass),
stat = "summary",
fun.ymin = function(z) {quantile(z,0.25)},
fun.ymax = function(z) {quantile(z,0.75)},
fun.y = median,
position=position_dodge(0.8),size=1.2,color="black",show.legend = FALSE) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,fill=phaseClass)) +
geom_boxplot(mapping = aes(x = numStims, y = percentDiff,fill=phaseClass),
position=position_dodge(0.8),notch=TRUE)  +
geom_dotplot(binaxis='y',binwidth=2,stackdir='center',
position=position_dodge(0.8))+
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')
p2
p2 + geom_hline(yintercept=0) + theme_classic()
#fit.glm    = glm(magnitude ~ stimLevel + numStims + subjectNum + channel + phaseClass,data=data)
#fit.glm    = glm(magnitude ~ numStims + channel + phaseClass,data=data)
fit.glm    = glm(percentDiff ~ numStims+phaseClass+betaLabels,data=dataNoBaseline)
summary(fit.glm)
plot(fit.glm)
#fit.glm    = glm(magnitude ~ numStims + channel + phaseClass,data=data)
fit.glm2    = glm(magnitude ~ numStims+phaseClass+betaLabels+channel,data=data)
summary(fit.glm2)
plot(fit.glm2)
#fit.lmm = lmer(magnitude ~ stimLevel + numStims + subjectNum + channel + phaseClass + (1|subjectNum) + (1|numStims) + (1|channel)+(1|stimLevel),data=data)
fit.lmm = lmer(percentDiff~numStims+phaseClass+betaLabels+channel+ (1| sid) ,data=dataNoBaseline)
summary(fit.lmm)
plot(fit.lmm)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (numStims|channel) + (phaseClass|channel) ,data=dataNoBaseline)
plot(fit.lmm2)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (1|sid) +(numStims|channel) + (phaseClass|channel) ,data=dataNoBaseline)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (1|sid) +(-1+numStims|channel) + (phaseClass|channel) ,data=dataNoBaseline)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (1|sid) +(numStims|channel) ,data=dataNoBaseline)
plot(fit.lmm2)
summary(fit.lmm2)
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
summary(glht(fit.glm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.glm,linfct=mcp(phaseClass="Tukey")))
summary(glht(fit.glm,linfct=mcp(numStims="Tukey")))
fit.glm    = glm(percentDiff ~ numStims+phaseClass+betaLabels+channel,data=dataNoBaseline)
summary(fit.glm)
plot(fit.glm)
summary(glht(fit.glm,linfct=mcp(phaseClass="Tukey")))
summary(glht(fit.glm,linfct=mcp(numStims="Tukey")))
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (numStims|chan) + (1|sid) ,data=dataNoBaseline)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (numStims|channel) + (1|sid) ,data=dataNoBaseline)
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + betaLabels*numStims + (numStims|channel) + (1|sid) ,data=dataNoBaseline)
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (numStims|sid\channel) ,data=dataNoBaseline)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (numStims|sid/channel) ,data=dataNoBaseline)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (1|sid/channel) ,data=dataNoBaseline)
plot(fit.lmm2)
qqplot(summary(fit.lmm2))
qqplot(fit.lmm2)
qqnorm(resid(fit.lmm2))
qqline(resid(fit.lmm2))  #summary(fit.lmm2)
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (1 + numStims|sid/channel) ,data=dataNoBaseline)
colnames(data)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + (1 + numStims|sid/channel) + (phaseClass|sid/channel) ,data=dataNoBaseline)
