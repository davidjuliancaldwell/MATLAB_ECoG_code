}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e')
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=mean_cl_boot, geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=mean, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
# ----
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('Hmisc')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
# ----
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_50.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
#data <- subset(data, magnitude<800)
data <- subset(data,!is.nan(data$magnitude))
data <- subset(data,data$sid!='702d24')
data <- subset(data,data$sid!='0b5a2ePlayBack')
data <- subset(data,data$numStims!='Null')
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
#data$phaseClass <- revalue(data$phaseClass, c("90"=0,"270"=1))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e')
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=mean_cl_boot, geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=mean, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
unique(summaryData$phaseClass)
# ----
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('Hmisc')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
# ----
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_50.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
#data <- subset(data, magnitude<800)
data <- subset(data,!is.nan(data$magnitude))
data <- subset(data,data$sid!='702d24')
data <- subset(data,data$sid!='0b5a2ePlayBack')
data <- subset(data,data$numStims!='Null')
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
#data$phaseClass <- revalue(data$phaseClass, c("90"=0,"270"=1))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e')
pd1 = position_dodge(0.2)
pd2 = position_dodge(0.65)
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=mean_cl_boot, geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=mean, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=median_hilow,conf.int =0.5, geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=median, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
pd1 = position_dodge(0.2)
pd2 = position_dodge(0.65)
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=median_hilow,fun.args=(conf.int =0.5), geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=median, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
fit.glm    = glm(percentDiff ~ numStims+phaseClass,data=dataNoBaseline)
summary(fit.glm)
plot(fit.glm)
data <- subset(data, magnitude<800)
pd1 = position_dodge(0.2)
pd2 = position_dodge(0.65)
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=median_hilow,fun.args=(conf.int =0.5), geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=median, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
fit.glm    = glm(percentDiff ~ numStims+phaseClass,data=dataNoBaseline)
summary(fit.glm)
# ----
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('Hmisc')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
# ----
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_50.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
data <- subset(data, magnitude<800)
data <- subset(data,!is.nan(data$magnitude))
data <- subset(data,data$sid!='702d24')
data <- subset(data,data$sid!='0b5a2ePlayBack')
data <- subset(data,data$numStims!='Null')
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
#data$phaseClass <- revalue(data$phaseClass, c("90"=0,"270"=1))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e')
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=median_hilow,fun.args=(conf.int =0.5), geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=median, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
fit.glm    = glm(percentDiff ~ numStims+phaseClass+betaLabels+channel,data=dataNoBaseline)
summary(fit.glm)
fit.glm    = glm(percentDiff ~ numStims+phaseClass,data=dataNoBaseline)
summary(fit.glm)
plot(fit.glm)
fit.glm2    = glm(magnitude ~ numStims+phaseClass+betaLabels,data=data)
summary(fit.glm2)
plot(fit.glm2)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels  + (1 | sid/channel)  ,data=dataNoBaseline)
summary(fit.lmm2)
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + numStims * phaseClass + (1 | sid/channel) + (betaLabels|sid) ,data=dataNoBaseline)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + numStims * phaseClass ,data=dataNoBaseline)
fit.lmm2 = lmer(percentDiff~numStims+phaseClass+betaLabels + numStims * phaseClass + (1 | sid/channel) ,data=dataNoBaseline)
summary(fit.lmm2)
summary(glht(fit.lmm2,linfct=mcp(numStims="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(betaLabels="Tukey")))
summary(glht(fit.lmm2,linfct=mcp(phaseClass="Tukey")))
anova(fit.lmm2)
install.packages('lmerTest')
library('lmerTest')
fit.lmm3 = lmer(percentDiff~numStims+phaseClass + betaLabels  + numStims*betaLabels + numStims*phaseClass + (1 | sid/channel) ,data=dataNoBaseline)
summary(fit.lmm3)
anova(fit.lmm3)
plot(fit.lmm3)
qqnorm(resid(fit.lmm3))
qqline(resid(fit.lmm3))  #summary(fit.lmm2)
# ----
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('Hmisc')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
library('lmerTest')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
# ----
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_100.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
data <- subset(data, magnitude<800)
data <- subset(data,!is.nan(data$magnitude))
data <- subset(data,data$sid!='702d24')
data <- subset(data,data$sid!='0b5a2ePlayBack')
data <- subset(data,data$numStims!='Null')
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
#data$phaseClass <- revalue(data$phaseClass, c("90"=0,"270"=1))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e')
pd1 = position_dodge(0.2)
pd2 = position_dodge(0.65)
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=median_hilow,fun.args=(conf.int =0.5), geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=median, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
fit.lmm3 = lmer(percentDiff~numStims+phaseClass + betaLabels  + numStims*betaLabels + numStims*phaseClass + (1 | sid/channel) ,data=dataNoBaseline)
summary(fit.lmm3)
anova(fit.lmm3)
# ----
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('Hmisc')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
library('lmerTest')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
# ----
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_100.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
#data <- subset(data, magnitude<800)
data <- subset(data,!is.nan(data$magnitude))
data <- subset(data,data$sid!='702d24')
data <- subset(data,data$sid!='0b5a2ePlayBack')
data <- subset(data,data$numStims!='Null')
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
#data$phaseClass <- revalue(data$phaseClass, c("90"=0,"270"=1))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e')
pd1 = position_dodge(0.2)
pd2 = position_dodge(0.65)
p2 <- ggplot(summaryData, aes(x=numStims, y=percentDiff,color=phaseClass)) + theme_light(base_size = 18) +
geom_point(position=position_jitterdodge(dodge.width=0.65, jitter.height=0, jitter.width=0.25),
alpha=0.7) +
stat_summary(fun.data=median_hilow,fun.args=(conf.int =0.5), geom="errorbar", width=0.05, position=pd1) +
stat_summary(fun.y=median, geom="point", size=2, position=pd1) +
labs(x = 'Number of conditioning stimuli',colour = 'delivered phase',title = 'Dose dependence as a function of phase of stimulation',y = 'Percent difference from baseline')+
geom_hline(yintercept=0)
p2
fit.lmm3 = lmer(percentDiff~numStims+phaseClass + betaLabels  + numStims*betaLabels + numStims*phaseClass + (1 | sid/channel) ,data=dataNoBaseline)
summary(fit.lmm3)
# ----
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('Hmisc')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
library('lmerTest')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
# ----
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_100.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
#data <- subset(data, magnitude<800)
data <- subset(data,!is.nan(data$magnitude))
data <- subset(data,data$sid!='702d24')
data <- subset(data,data$sid!='0b5a2ePlayBack')
data <- subset(data,data$numStims!='Null')
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
#data$phaseClass <- revalue(data$phaseClass, c("90"=0,"270"=1))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e')
# ----
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_100.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
#data <- subset(data, magnitude<800)
data <- subset(data,!is.nan(data$magnitude))
data <- subset(data,data$numStims!='Null')
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
#data$phaseClass <- revalue(data$phaseClass, c("90"=0,"270"=1))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e' | data$sid=='0b5a2ePlayback')
unique(dataSubjOnly$sid)
data
unique(data$sid)
dataSubjOnly <- subset(data,(data$sid=='0b5a2e' | data$sid=='0b5a2ePlayback'))
unique(dataSubjOnly$sid)
data$sid == '0b5a2ePlayBack'
unique(data$sid == '0b5a2ePlayBack')
dataSubjOnly <- subset(data,data$sid=='0b5a2e' | data$sid=='0b5a2ePlayback')
unique(dataSubjOnly$sid)
unique(data$sid)
dataSubjOnly <- subset(data,data$sid=='0b5a2e' | data$sid=='0b5a2ePlayback')
dataSubjOnly
dataSubjOnly$sid
unique(dataSubjOnly$sid)
# ----
setwd('C:/Users/david/SharedCode/MATLAB_ECoG_code/Experiment/BetaTriggeredStim/')
library('Hmisc')
library('nlme')
library('ggplot2')
library('drc')
library('minpack.lm')
library('lmtest')
library('glmm')
library("lme4")
library('multcomp')
library('plyr')
library('here')
library('lmerTest')
rootDir = here()
savePlot = 0
figWidth = 8
figHeight = 6
# ----
data <- read.table(here("Experiment","BetaTriggeredStim","betaStim_outputTable_100.csv"),header=TRUE,sep = ",",stringsAsFactors=F,
colClasses=c("magnitude"="numeric","betaLabels"="factor","sid"="factor","numStims"="factor","stimLevel"="numeric","channel"="factor","subjectNum"="factor","phaseClass"="factor","setToDeliverPhase"="factor"))
#data <- subset(data, magnitude<800)
data <- subset(data,!is.nan(data$magnitude))
data <- subset(data,data$numStims!='Null')
# rename for ease
data$numStims <- revalue(data$numStims, c("Test 1"="[1,2]","Test 2"="[3,4]","Test 3"="[5,inf)"))
#data$phaseClass <- revalue(data$phaseClass, c("90"=0,"270"=1))
data$percentDiff = 0
for (name in unique(data$sid)){
for (chan in unique(data[data$sid == name,]$channel)){
for (numStimTrial in unique(data$numStims)){
numBase = nrow(data[data$sid == name & data$channel == chan & data$numStims == 'Base',])
base = data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$magnitude
baseMean = mean(base)
data[data$sid == name & data$channel == chan & data$numStims == 'Base',]$percentDiff = 100*(base - baseMean)/baseMean
for (typePhase in unique(data$phaseClass)){
percentDiff = 100*((data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$magnitude)-baseMean)/baseMean
data[data$sid == name & data$channel == chan & data$numStims == numStimTrial & data$phaseClass == typePhase,]$percentDiff = percentDiff
}
}
}
}
sapply(data,class)
#summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel), function(x) mean(x[,"percentDiff"]))
summaryData = ddply(data[data$numStims != "Base",] , .(sid,phaseClass,numStims,channel,betaLabels), summarize, percentDiff = mean(percentDiff))
dataNoBaseline = data[data$numStims != "Base",]
dataSubjOnly <- subset(data,data$sid=='0b5a2e' | data$sid=='0b5a2ePlayback')
unique(dataSubjOnly$sid)
